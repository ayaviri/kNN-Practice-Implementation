HOW TO USE:
here are instructions on how to run the program, and how to use this algorithm on the dataset of
choice. in the command line, from the "src" directory, run the command "python main.py" with one of 
two command line arguments. "-manual" allows you to tweak every variable after each trial. the 
results of all cumulative trials will not be computed. this is included so that the user can play
around with each of the variables at will. the program will not terminate in this mode unless the
user quits out of the program forcibly (eg. using control + c on mac). "-automatic" will run a
series of trials on a given dataset, and output cumulative statistical measures by variable. the 
three variables and their permitted values are as follows: 

- distanceMetric: euclideanDistance, manhattanDistance, cosineSimilarity
- k: 1, 3, 5, 7, sqrt(n)
- label: [list of available labels]

no input is required from the user with this argument. the four statistical measures computed are
accuracy, precision, recall, and f-score. in the case that any one of these cannot be computed for
whatever reason, the measure will be specified as a string rather than a floating point value. 
any other command line argument will terminate the program.

there are a few available datasets in the "datasets" folder, and user can use any of these by 
following the last two steps below. however, if you'd like to use this algorithm with any other 
dataset, follow ALL of the steps below: 
- download training data and move it to the "datasets" folder of this project
- create a file called "nameOfDatasetClean.py"
- create a function "cleanData" with no parameters
- clean the data from your file and output in the following formatted: list (list (number), string)
- NOTE: this format will treat your training data as a list of tuples in which the first element of
        tuple will be the vector representing the features of that given data point, and the second
        label will be the corresponding label of that data point
- in "main.py", add the following import: "from datasets import nameOfDatasetClean"
- in the "manual" and "automatic" functions, where the variable "cleanedData" is assigned, replace
- the current cleanData function call with your own 
  (eg. cleanedData = nameOfDatasetClean.cleanData())
- run the program as described above, using one of "-manual" or "-automatic" as a command line
  argument when running "main.py"